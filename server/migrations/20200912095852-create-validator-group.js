module.exports = {
  up: async (queryInterface, DataTypes) => {
    await queryInterface.sequelize.transaction(async (t) => {
      await queryInterface.createTable('ValidatorGroups', {
        id: { type: DataTypes.INTEGER, autoIncrement: true, primaryKey: true }, // autogenerated
        name: { type: DataTypes.STRING, allowNull: false },
        stashes: { type: DataTypes.ARRAY(DataTypes.STRING), allowNull: false },
        user_id:    { type: DataTypes.INTEGER, allowNull: false, references: { model: 'Users', key: 'id' } },
        chain: { type: DataTypes.STRING, references: { model: 'Chains', key: 'id' } },
        created_at: { type: DataTypes.DATE, allowNull: false },
        updated_at: { type: DataTypes.DATE, allowNull: false }
      }, { transaction: t });
    });

    await queryInterface.sequelize.transaction(async (t) => {
      await queryInterface.addIndex('ValidatorGroups', { fields: ['user_id', 'name' ] }, { transaction: t });
    });

    return new Promise((resolve, reject) => {
      resolve();
    });
  },
  down: (queryInterface, DataTypes) => {
    return queryInterface.dropTable('ValidatorGroups');
  }
};
